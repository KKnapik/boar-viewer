# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- "*"

resources:
- repo: self

variables:
- name: subscription
  value: 'Bartek-MPN'
- name: containerRegistry
  value: 'registrydocker'
- name: run
  value: 'yes'
- ${{ if startsWith(variables['build.SourceBranch'], 'refs/heads/feature') }}:
  - group: maint
- ${{ if startsWith(variables['build.SourceBranch'], 'refs/heads/develop') }}:
  - group: dev

stages:

- stage: Test
  displayName: Test image
  condition: eq(variables['run'], 'yes')
  jobs:

  - job: Test
    displayName: Test
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - pwsh: |
        write-output "$(envName)"
        write-output "$(build.SourceBranch)"

- template: Infrastructure/Aks/aksStage.yml #  Aks Cluster Deployment
  parameters:
    name: Aks_Cluster_Deployment
    azureSubscription: '$(subscription)'
    resourceGroupName: 'cloudboar-$(envName)-rg'
    location: '$(location)'
    networkParameters: '-location $(location) 
                        -vnetAKSName "Vnet_$(envName)_AKS"'
    aksParameters: '-location $(location) 
                    -acrName "cloudboaracr$(envName)"
                    -virtualNetworkName "Vnet_$(envName)_AKS" 
                    -aksName "cloudboaraks$(envName)" 
                    -aksNodeCount $(agentMinCount)
                    -aksMaxNodeCount $(agentMaxCount)               
                    -envName "$(envName)"
                    -servicePrincipalClientId "$(akscCientId)"
                    -servicePrincipalSecret "$(aksSecret)"'

- stage: Build
  displayName: Build image
  condition: eq(variables['run'], 'yes')
  jobs:

  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    # - task: Docker@2
    #   displayName: Build an image
    #   inputs:
    #     command: build
    #     dockerfile: '$(Build.SourcesDirectory)/Api.BoarService/Dockerfile'
    #     tags: |
    #       $(tag)
    - task: DockerCompose@0
      inputs:
        azureSubscription: 'Bartek-MPN'
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'cbacrkk'
        dockerComposeFile: 'docker-compose.yml'
        action: 'Build services'
        projectName: $(Build.Repository.Name)
        qualifyImageNames: true
        additionalImageTags: $(Build.BuildId)
    - pwsh: |
        write-output "$(containerRegistry)"
    - task: DockerCompose@0
      displayName: Push services
      inputs:
        action: Push services
        azureSubscription: 'Bartek-MPN'
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'cbacrkk'
        dockerComposeFile: docker-compose.yml
        projectName: $(Build.Repository.Name)
        qualifyImageNames: true
        additionalImageTags: $(Build.BuildId)

- stage: Helm_Deploy
  displayName: Helm
  condition: eq(variables['run'], 'yes')
  jobs:

  - job: App_Deploy
    displayName: App Deploy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: HelmInstaller@1
      inputs:
        helmVersionToInstall: '2.12.2'
    - task: HelmDeploy@0
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceConnection: 'cloudboar-aks'
        namespace: 'cloudboar'
        command: 'upgrade'
        chartType: 'FilePath'
        chartPath: 'boar-viewer/Kubernetesboar-viewer'
        releaseName: 'Web-Frontend'
        overrideValues: 'tag=$(Build.BuildId)'
        valueFile: 'Kubernetes/boar-viewer/values.yaml'
