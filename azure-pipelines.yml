# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- "*"

resources:
- repo: self

variables:
- name: subscription
  value: 'Bartek-MPN'
- name: containerRegistry
  value: 'cloudboaracrmaint'
- ${{ if startsWith(variables['build.SourceBranch'], 'refs/heads/feature') }}:
  - group: maint
- ${{ if startsWith(variables['build.SourceBranch'], 'refs/heads/develop') }}:
  - group: dev

stages:

- stage: Test
  displayName: Test image
  condition: 
  jobs:

  - job: Test
    displayName: Test
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - pwsh: |
        write-output "$(envName)"
        write-output "$(build.SourceBranch)"

- template: Infrastructure/Aks/aksStage.yml #  Aks Cluster Deployment
  parameters:
    name: Aks_Cluster_Deployment
    azureSubscription: '$(subscription)'
    resourceGroupName: 'cloudboar-$(envName)-rg'
    location: '$(location)'
    networkParameters: '-location $(location) 
                        -vnetAKSName "Vnet_$(envName)_AKS"'
    aksParameters: '-location $(location) 
                    -acrName "cloudboaracr$(envName)"
                    -virtualNetworkName "Vnet_$(envName)_AKS" 
                    -aksName "cloudboaraks$(envName)" 
                    -aksNodeCount $(agentMinCount)
                    -aksMaxNodeCount $(agentMaxCount)               
                    -envName "$(envName)"
                    -servicePrincipalClientId "$(akscCientId)"
                    -servicePrincipalSecret "$(aksSecret)"'

- stage: Build
  displayName: Build image
  jobs:

  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    # - task: Docker@2
    #   displayName: Build an image
    #   inputs:
    #     command: build
    #     dockerfile: '$(Build.SourcesDirectory)/Api.BoarService/Dockerfile'
    #     tags: |
    #       $(tag)
    - task: DockerCompose@0
      inputs:
        azureSubscription: 'Bartek-MPN'
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: '$(containerRegistry)'
        dockerComposeFile: 'docker-compose.yml'
        action: 'Build services'
        projectName: $(Build.Repository.Name)
        qualifyImageNames: true
        additionalImageTags: $(Build.BuildId)
    # - pwsh: |
    #     docker images ls
    - task: DockerCompose@0
      displayName: Push services
      inputs:
        action: Push services
        azureSubscription: 'Bartek-MPN'
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: '$(containerRegistry)'
        dockerComposeFile: docker-compose.yml
        projectName: $(Build.Repository.Name)
        qualifyImageNames: true
        additionalImageTags: $(Build.BuildId)
