# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - "*"
  
resources:
  - repo: self
  
variables:
  - name: subscription
    value: 'Bartek-MPN'
  - name: containerRegistry
    value: 'cloudboaracrmaint'
  - name: run
    value: 'yes'
  - name: tag
    value: $(Build.BuildId)

stages:
  
  - stage: Test
    displayName: Test image
    jobs:
  

    - job: Run_docker_build_and_push
      displayName: Docker build and push
      pool:
        vmImage: 'ubuntu-18.04'

      steps:

      - pwsh: pwd 
      - pwsh: dir 
      - pwsh: cat $(System.DefaultWorkingDirectory)/sample-webapi/SampleWebApi/Dockerfile 
      - task: Docker@2
        displayName: 'Docker buildAndPush - AD'
        inputs:
          command: 'buildAndPush'
          containerRegistry: krisacr
          repository: apidotnet
          buildContext: sample-webapi/
          Dockerfile: '/sample-webapi/SampleWebApi/Dockerfile'
          tags: |
            latest
            $(Build.BuildId)
  
  - stage: Helm_Deploy
    displayName: Helm
    jobs:
  
    - job: App_Deploy
      displayName: App Deploy
      pool:
        vmImage: 'ubuntu-latest'
      steps:
  
      - task: KubernetesManifest@0
        displayName: Create imagePullSecret
        inputs:
          action: createSecret
          secretName: 'acrazure'
          namespace: 'kube-system'
          dockerRegistryEndpoint: krisacr
          kubernetesServiceConnection: 'lcmaks'
  
      # - task: KubernetesManifest@0
      #   displayName: Deploy
      #   inputs:
      #     kubernetesServiceConnection: 'cloudboar-aks'
      #     namespace: 'kube-system'
      #     manifests: Infrastructure/Aks/Roles/tiller.yaml
  
      - task: HelmInstaller@1
        inputs:
          helmVersionToInstall: '2.16.8'
  
      # - task: HelmDeploy@0
      #   displayName: Helm init
      #   inputs:
      #     connectionType: 'Kubernetes Service Connection'
      #     kubernetesServiceConnection: 'cloudboar-aks'
      #     command: init
      #     upgradetiller: true
      #     waitForExecution: true
      #     arguments: --service-account tiller
  
      - task: HelmDeploy@0
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceConnection: 'cloudboar-aks'
          namespace: 'cloudboar'
          command: 'upgrade'
          chartType: 'FilePath'
          chartPath: 'Kubernetes/boar-viewer'
          releaseName: 'test-dotnet-app'
          overrideValues: 'global.image.tag=$(tag),global.image.repository=acrwelcmtest.azurecr.io'
          valueFile: 'Kubernetes/boar-viewer/values.yaml'
          force: true
          waitForExecution: false